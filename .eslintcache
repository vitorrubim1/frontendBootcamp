[{"/home/vitor/Documents/my-projects/frontendGoBarber/src/styles/global.ts":"1","/home/vitor/Documents/my-projects/frontendGoBarber/src/utils/getValidationsErrors.ts":"2","/home/vitor/Documents/my-projects/frontendGoBarber/src/components/Tooltip/index.tsx":"3","/home/vitor/Documents/my-projects/frontendGoBarber/src/components/Tooltip/styles.ts":"4","/home/vitor/Documents/my-projects/frontendGoBarber/src/SignIn/index.tsx":"5","/home/vitor/Documents/my-projects/frontendGoBarber/src/App.tsx":"6","/home/vitor/Documents/my-projects/frontendGoBarber/src/components/Input/styles.ts":"7","/home/vitor/Documents/my-projects/frontendGoBarber/src/context/AuthContext.tsx":"8"},{"size":467,"mtime":1616265495636,"results":"9","hashOfConfig":"10"},{"size":560,"mtime":1616265495636,"results":"11","hashOfConfig":"10"},{"size":356,"mtime":1616265495636,"results":"12","hashOfConfig":"10"},{"size":780,"mtime":1616265495636,"results":"13","hashOfConfig":"10"},{"size":2341,"mtime":1616282605785,"results":"14","hashOfConfig":"10"},{"size":391,"mtime":1616281479650,"results":"15","hashOfConfig":"10"},{"size":1136,"mtime":1616265495636,"results":"16","hashOfConfig":"10"},{"size":739,"mtime":1616282513411,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mggs84",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},"/home/vitor/Documents/my-projects/frontendGoBarber/src/styles/global.ts",[],"/home/vitor/Documents/my-projects/frontendGoBarber/src/utils/getValidationsErrors.ts",[],"/home/vitor/Documents/my-projects/frontendGoBarber/src/components/Tooltip/index.tsx",[],"/home/vitor/Documents/my-projects/frontendGoBarber/src/components/Tooltip/styles.ts",[],"/home/vitor/Documents/my-projects/frontendGoBarber/src/SignIn/index.tsx",[],"/home/vitor/Documents/my-projects/frontendGoBarber/src/App.tsx",[],"/home/vitor/Documents/my-projects/frontendGoBarber/src/components/Input/styles.ts",[],"/home/vitor/Documents/my-projects/frontendGoBarber/src/context/AuthContext.tsx",["35"],"import React, { createContext, useCallback } from \"react\";\n\nimport { api } from \"../services/api\";\n\ninterface AuthContextData {\n  name: string;\n  signIn(credentials: SignInCredentials): Promise<void>;\n}\n\ninterface SignInCredentials {\n  email: string;\n  password: string;\n}\n\nexport const AuthContext = createContext<AuthContextData>(\n  {} as AuthContextData\n);\n\nexport const AuthProvider: React.FC = ({ children }) => {\n  const signIn = useCallback(async ({ email, password }: SignInCredentials) => {\n    const response = await api.post(\"sessions\", { email, password });\n\n    console.log(response.data);\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ name: \"Vitor\", signIn }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n",{"ruleId":"36","severity":1,"message":"37","line":23,"column":5,"nodeType":"38","messageId":"39","endLine":23,"endColumn":16},"no-console","Unexpected console statement.","MemberExpression","unexpected"]